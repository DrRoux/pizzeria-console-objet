<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>BIRABEN-BIANCHI_Hugo</groupId>
	<artifactId>pizzeriaProject</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	
	<name>${project.artifactId}</name>
	<url>http://maven.apache.org</url>

  	<properties>
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		
		<!-- Version de tous les packages maven intégrés au projet -->
		<junit.version>4.12</junit.version>
		<jarPlugin.version>2.4</jarPlugin.version>
		<shade.version>3.0.0</shade.version>
		<mysql.version>8.0.11</mysql.version>
		<jpa.version>2.2</jpa.version>
		<hibernate.version>5.4.2.Final</hibernate.version>
		<commonCodec.version>1.12</commonCodec.version>
		<logback.version>1.2.3</logback.version>
		<slf4j.version>1.7.25</slf4j.version>
		<scanner.version>1.16.0</scanner.version>
		<mockito.version>2.26.0</mockito.version>
		<jstl.version>1.2</jstl.version>
	</properties>

	<build>
		<finalName> ${project.artifactId} </finalName>
		
		<!-- Activation du remplacement des variables via Maven -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		
		<plugins>
			<!--  Rend le JAR crééer exécutable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version> ${jarPlugin.version} </version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>dev.App</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			
			<!-- configuration du plugin shade -->
			<!-- Création d'un uber-jar (Code + dependencies + renaming some packages) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version> ${shade.version} </version>
				<executions>
					<execution>
					<phase>package</phase>
					<goals>
						<goal>shade</goal>
					</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- JUnit permet de réaliser des tests unitaires -->
		<dependency>
			<groupId>junit</groupId>
	     	<artifactId>junit</artifactId>
	     	<version> ${junit.version} </version>
	     	<scope>test</scope>
	   	</dependency>
		
		<!-- Driver de connexion pour une BDD Mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version> ${mysql.version} </version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Java Persistence API (JEE)  -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>javax.persistence-api</artifactId>
			<version>${jpa.version}</version>
		</dependency>
		
		<!-- Underlay of JPA  -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!--  Permet d'utiliser les localDateTime dans la BDD -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-java8</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		
		<!-- Permet l'utilisation de chiffrage SHA512 (voir InscrireClientService pour exemple) -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commonCodec.version}</version>
		</dependency>
		
		<!-- Outils de logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- Outils de logging overlay of logback -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		
		<!--  Injecte du code dans un scanner (utile pour les tests unitaires) -->
		<dependency>
			<groupId>com.github.stefanbirkner</groupId>
			<artifactId>system-rules</artifactId>
			<version>${scanner.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!--  Permet de créer des mocks pour faire de vrais tests unitaires -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!--  Ajout de tags pour simplifier l'écriture du code JAVA dans le HTML -->
		<dependency>
	    	<groupId>jstl</groupId>
	    	<artifactId>jstl</artifactId>
	    	<version>${jstl.version}</version>
		</dependency>
		
	</dependencies>
 
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<mode>DEV</mode>
			</properties>
	</profile>
	
	<!-- mvn clean package -Pprod pour lancer en mode production, dev par defaut sinon-->
		<profile>
			<id>prod</id>
			<properties>
				<mode>PROD</mode>
			</properties>
		</profile>
	</profiles>
</project>